@model IEnumerable<DBContex.Models.Article>
@using Microsoft.AspNetCore.Mvc.Rendering;


@{
    ViewBag.Title = "Статьи";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var tags = ViewBag.TagsList;

}
<head>
    <style>
        /* Убираем рамки у ячеек таблицы */
        table {
            border-collapse: collapse;
        }

        td, th {
            border: none;
        }
        /* Добавляем отступы между ячейками и строками */
        td, th {
            padding: 10px;
            border-bottom: 1px solid #ddd;
        }
        /* Добавляем обрамление и тень у таблицы */
        .table {
            border: 1px solid #ccc;
            box-shadow: 1px 1px 1px #ccc;
        }
        /* Цвет фона заголовка таблицы */
        th {
            background-color: #eee;
        }
        /* Стиль наведения на таблицу */
        tr:hover {
            background-color: #f5f5f5;
        }
    </style>
    <script>
        function getSelectedTags() {
            var selectedTags = [];
            var checkboxes = document.getElementsByName("tagFilters");// Получаем все чекбоксы
            for (var i = 0; i < checkboxes.length; i++) {
                if (checkboxes[i].checked) {// Если чекбокс отмечен, добавляем его значение в массив selectedTags
                    selectedTags.push(checkboxes[i].value);
                }
            }
            return selectedTags;
        }
    </script>
</head>

@using(Html.BeginForm("Index", "Article", FormMethod.Get))
{
    <h1>Articles</h1>
    <div class="form-group">
        <label for="tags">Filter by tags:</label>
        <div>
            @foreach(var tag in ViewBag.TagsList)
            {
                <div class="checkbox">
                    <label>
                        <input type="checkbox" name="tagFilters[@tag.Key]" value="@tag.Value" @(tag.Value ? "checked" : "") /> @tag.Key
                    </label>
                </div>
            }
        </div>
        <button type="submit" class="btn btn-primary"
            onclick="document.getElementById('tags').value = getSelectedTags().join(',');">
            Apply Filter
        </button>
        <a href="@Url.Action("Index", "Article")" class="btn btn-secondary">Clear Filters</a>
    </div>
    <input type="hidden" name="tags" id="tags" value="" /> <!-- Отправляем список выбранных тегов в скрытом поле -->
}

<table class="table ">
    <thead>
        <tr class="classth">
            <th>Title</th>
            <th>Content</th>
            <th>Publication Date</th>
            <th>Author</th>
            <th>Tags</th>
        </tr>
    </thead>
    <tbody>
        @foreach(var article in Model)
        {
            <tr>
                <td>@article.Title</td>
                <td>@(article.Content.Length > 40 ? article.Content.Substring(0, 40) + "..." : article.Content)</td>
                <td>@article.PublicationDate.ToShortDateString()</td>
                <td>@article.Author.UserName</td>
                <th>
                    @foreach(var tagsName in @article.Tags)
                    {
                        @tagsName.Name
                        if(tagsName != article.Tags.Last())
                           {
                              @(", ")
                           }
                    }
                   
                </th>
                <td>
                    <a href="@Url.Action("Edit", "Article", new { id = article.Id })">Посмотреть</a>
                </td>
            </tr>
        }
    </tbody>
</table>





    <!-- Пагинация -->
    <div class="pagination">
        

        @if(ViewBag.CurrentPage > 1)
        {
        <a href="@Url.Action("Index", "Article", new {tagFilters = @tags, page = ViewBag.CurrentPage - 1, pageSize = ViewBag.PageSize })@(ViewContext.HttpContext.Request.QueryString)">Previous</a>
        }

        @for(var i = 1; i <= ViewBag.TotalPages; i++)
        {
            if(i == ViewBag.CurrentPage)
            {
                <span>@i</span>
            }
            else
            {

            <a href="@Url.Action("Index", "Article", new {tagFilters = @tags, page = i, pageSize = ViewBag.PageSize })@(ViewContext.HttpContext.Request.QueryString)">@(i)</a>
                
            }
        }

        @if(ViewBag.CurrentPage < ViewBag.TotalPages)
        {
        <a href="@Url.Action("Index", "Article", new {tagFilters = @tags, page = ViewBag.CurrentPage + 1, pageSize = ViewBag.PageSize})@(ViewContext.HttpContext.Request.QueryString)">Next</a>
            
        }
    </div>


